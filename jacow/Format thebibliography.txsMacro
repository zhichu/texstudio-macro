{
    "abbrev": "",
    "description": [
        "Sort bibliography entries with regard to the citation order. Create a dummy one when cited label not found and remove the ones not cited. The original environment will be put at the end of the document for comparison."
    ],
    "formatVersion": 2,
    "menu": "",
    "name": "Format thebibliography",
    "shortcut": "",
    "tag": [
        "var the_doc = editor.document().text();",
        "",
        "// search for \\cite, \\autocite, ... etc.",
        "const cite_exp = new RegExp(/\\\\\\w*cite[^{]*{([^}]+)}/,\"g\");",
        "var cites=new Array();",
        "// put entries in an array",
        "while (c = cite_exp.exec(the_doc)) {",
        "\tcites.push(c);",
        "}",
        "// convert to csv ⇒ split ⇒ get rid of white spaces",
        "cites = [...cites].map(x=>x[1]).join(\",\").split(\",\").map(x=>x.trim());",
        "// remove duplicates",
        "const uniq_cites = [...new Set(cites)];",
        "",
        "// search for =thebibliography= environment",
        "const bib_exp = new RegExp(/\\\\begin\\s*{thebibliography}\\s*{([^}]+)}([\\S\\s]+)\\\\end\\s*{thebibliography}/,\"g\");",
        "const bib_match = bib_exp.exec(the_doc);",
        "// \"[nnn]{xxx}yyy\" ⇒ [\"xxx\",\"new_yyy\"] where",
        "// new_yyy put each clause on an indented new line",
        "function keyval(s) {",
        "\tvar ret = s.split(\"}\");",
        "\tvar k = ret[0].split(\"{\")[1];",
        "\tvar v = ret.slice(1).join(\"}\").replace(/\\s+/g,\" \").trim().split(\", \").map(x=>\"  \"+x.trim()).join(\",\\n\");",
        "\treturn [k,v];",
        "}",
        "// =thebibliography= environment",
        "// ⇒ split at =\\bibitem=",
        "// ⇒ remove first element (begin environment)",
        "// ⇒ remove end environment",
        "// ⇒ format as [\"key\",\"value\"]",
        "const bibitems = bib_match[0].split(\"\\\\bibitem\").slice(1).map(x=>x.replace(/\\\\end\\s*{thebibliography}/g,\"\")).map(x=>keyval(x));",
        "// convert to object",
        "const bib = new Map(bibitems);",
        "// sort bib entries w.r.t. the citation order",
        "let sort_bib = \"\";",
        "uniq_cites.forEach(function(s) {",
        "\tsort_bib += \"\\n\\n\\\\bibitem{\" + s + \"}\\n\" + (bib.get(s) || \"  Reference with tag “\" + s + \"” is not defined!!!\");",
        "});",
        "// wrap =thebibliography= environment",
        "// it’s actually not necessary to convert the number of references to the all-\"9\"s form but I don’t want to confuse the authors so...",
        "sort_bib = \"\\n\\n\\\\begin{thebibliography}{\" + (Math.pow(10,Math.floor(Math.log10(uniq_cites.length))+1)-1) + \"}\" + sort_bib + \"\\n\\n\\\\end{thebibliography}\\n\\n\"",
        "",
        "// get the position of =thebibliography= environment",
        "var bib_pos = the_doc.search(bib_exp);",
        "// keep the text before =thebibliography=",
        "var new_doc = the_doc.slice(0,bib_pos);",
        "// put the sorted =thebibliography=",
        "new_doc += sort_bib;",
        "// resume the remaining text",
        "new_doc += the_doc.slice(bib_pos+bib_match[0].length);",
        "// backup the original =thebibliography=",
        "new_doc += \"\\n\\n\";",
        "new_doc += bib_match[0];",
        "",
        "editor.selectAll();",
        "editor.write(new_doc);"
    ],
    "trigger": "",
    "type": "Script"
}
